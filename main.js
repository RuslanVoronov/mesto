(()=>{"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,n(o.key),o)}}function n(e){var n=function(e,n){if("object"!==t(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===t(n)?n:String(n)}var r=function(){function t(e,r){var o,i,u,c=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),o=this,u=function(){c._inputList=Array.from(c._formElement.querySelectorAll(c._input)),c._buttonElement=c._formElement.querySelector(c._submitButton),c._toggleButtonState(),c._inputList.forEach((function(t){t.addEventListener("input",(function(){c._toggleInputErrorState(t),c._toggleButtonState()}))}))},(i=n(i="_setEventListeners"))in o?Object.defineProperty(o,i,{value:u,enumerable:!0,configurable:!0,writable:!0}):o[i]=u,this._input=e.input,this._submitButton=e.submitButton,this._inActiveButton=e.inActiveButton,this._inputError=e.inputError,this._errorClass=e.errorClass,this._formElement=r}var r,o;return r=t,(o=[{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"resetValidation",value:function(){var t=this;this._toggleButtonState(),this._inputList.forEach((function(e){t._hideInputError(e)}))}},{key:"_toggleInputErrorState",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}},{key:"_showInputError",value:function(t){this._formElement.querySelector("#".concat(t.id,"-error")).textContent=t.validationMessage,t.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(t){var e=this._formElement.querySelector("#".concat(t.id,"-error"));t.classList.remove(this._errorClass),e.textContent=""}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(t){return!t.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput(this._inputList)?(this._buttonElement.classList.add(this._inActiveButton),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inActiveButton),this._buttonElement.disabled=!1)}}])&&e(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),t}();function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function i(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,c(r.key),r)}}function u(t,e,n){return(e=c(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function c(t){var e=function(t,e){if("object"!==o(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===o(e)?e:String(e)}var a=function(){function t(e,n,r,o,i,c,a){var l=this,s=n.handleDeleteIconClick,f=r.handleAddLike,p=o.handleRemoveLike;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),u(this,"_addLike",(function(){l._handleAddLike(l._data._id),l._buttonLike.classList.add("like__button_active"),l._likes.push({_id:l._userId}),l._counter.textContent=parseInt(l._counter.textContent)+1})),u(this,"_deleteLike",(function(){l._handleRemoveLike(l._data._id),l._buttonLike.classList.remove("like__button_active"),l._likes=l._likes.filter((function(t){return t._id!=l._userId})),l._counter.textContent=parseInt(l._counter.textContent)-1})),u(this,"deleteCard",(function(){l._element.remove(l._data._id),l._element=null})),u(this,"_checkLike",(function(){return l._likes.some((function(t){return t._id===l._userId}))})),u(this,"_toggleLikeButton",(function(){l._checkLike()?l._deleteLike():l._addLike()})),u(this,"_setEventListeners",(function(){l._buttonLike.addEventListener("click",(function(t){return l._toggleLikeButton(t)})),l._ownerId===l._userId?l._buttonDelete.addEventListener("click",(function(){return l._handleDeleteIconClick(l._data._id,l)})):l._buttonDelete.style.visibility="hidden",l._checkLike()&&l._buttonLike.classList.toggle("like__button_active"),l._cardImage.addEventListener("click",(function(){return l._openImagePopup(l._name,l._link)}))})),u(this,"render",(function(){return l._element=l._getElement(),l._buttonLike=l._element.querySelector(".like__button"),l._buttonDelete=l._element.querySelector(".element__trash-button"),l._cardImage=l._element.querySelector(".element__image"),l._counter=l._element.querySelector(".like__counter"),l._element.querySelector(".element__title").textContent=l._name,l._cardImage.src=l._link,l._cardImage.alt=l._name,l._counter.textContent=l._data.likes.length,l._setEventListeners(),l._element})),this._name=c.name,this._link=c.link,this._template=a,this._openImagePopup=e,this._handleAddLike=f,this._handleRemoveLike=p,this._questionPopupBtn=document.querySelector("#question-btn"),this._data=c,this._userId=i,this._ownerId=c.owner._id,this._handleDeleteIconClick=s,this._likes=this._data.likes}var e,n;return e=t,(n=[{key:"_getElement",value:function(){return document.querySelector(this._template).content.querySelector(".element").cloneNode(!0)}}])&&i(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function l(t){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},l(t)}function s(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==l(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==l(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===l(o)?o:String(o)),r)}var o}var f=function(){function t(e,n){var r=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=r,this._container=document.querySelector(n)}var e,n;return e=t,(n=[{key:"renderItems",value:function(t){var e=this;this._renderedItems=t,this._renderedItems.forEach((function(t){return e._renderer(t)}))}},{key:"setItem",value:function(t){this._container.prepend(t)}}])&&s(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function p(t){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},p(t)}function y(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==p(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==p(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===p(o)?o:String(o)),r)}var o}var b=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"setEventListeners",value:function(){var t=this;this._popupCloseButton=this._popup.querySelector(".popup__close-button"),this._popupCloseButton.addEventListener("click",this.close.bind(this)),this._popup.addEventListener("mousedown",(function(e){e.target===e.currentTarget&&t.close()}))}}])&&y(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function m(t){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},m(t)}function d(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==m(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==m(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===m(o)?o:String(o)),r)}var o}function h(){return h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=_(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},h.apply(this,arguments)}function _(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=g(t)););return t}function v(t,e){return v=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},v(t,e)}function S(t,e){if(e&&("object"===m(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function g(t){return g=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},g(t)}var k=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&v(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=g(r);if(o){var n=g(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return S(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t)).popupTitle=e._popup.querySelector(".image-popup__name"),e.popupImage=e._popup.querySelector(".image-popup__image"),e}return e=u,(n=[{key:"open",value:function(t,e){this.popupImage.src=e,this.popupTitle.textContent=t,this.popupImage.alt=t,h(g(u.prototype),"open",this).call(this)}}])&&d(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(b);function w(t){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},w(t)}function E(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==w(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==w(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===w(o)?o:String(o)),r)}var o}var j=function(){function t(e){var n=e.nameSelector,r=e.jobSelector,o=e.avatarSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=document.querySelector(n),this._job=document.querySelector(r),this._avatar=document.querySelector(o)}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,job:this._job.textContent}}},{key:"setAvatar",value:function(t){t&&(this._avatar.src=t.avatar)}},{key:"setUserInfo",value:function(t){t.name&&(this._data=t,this._name.textContent=t.name,this._job.textContent=t.about)}}])&&E(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function O(t){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},O(t)}function P(t,e){return P=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},P(t,e)}function L(t,e){if(e&&("object"===O(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return C(t)}function C(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function I(){return I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=q(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},I.apply(this,arguments)}function q(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=T(t)););return t}function T(t){return T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},T(t)}function R(t,e,n){return(e=B(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function B(t){var e=function(t,e){if("object"!==O(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==O(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===O(e)?e:String(e)}var x=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&P(t,e)}(i,t);var e,n,r,o=(n=i,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=T(n);if(r){var o=T(this).constructor;t=Reflect.construct(e,arguments,o)}else t=e.apply(this,arguments);return L(this,t)});function i(t,e){var n,r,u,c=e.callbackFormSubmit;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,i),R(C(u=o.call(this,t)),"_getInputValues",(function(){return u._inputList.forEach((function(t){u._formValues[t.name]=t.value})),u._formValues})),R(C(u),"close",(function(){I((n=C(u),T(i.prototype)),"close",n).call(n),u._popupForm.reset()})),R(C(u),"setEventListeners",(function(){I((r=C(u),T(i.prototype)),"setEventListeners",r).call(r),u._popupForm.addEventListener("submit",(function(t){t.preventDefault(),u._callbackFormSubmit(u._getInputValues())}))})),R(C(u),"submitStatus",(function(t){u._submitButton.textContent=t})),u._callbackFormSubmit=c,u._popupForm=u._popup.querySelector(".popup__form"),u._inputList=u._popupForm.querySelectorAll(".popup__input"),u._submitButton=u._popupForm.querySelector(".popup__save-button"),u._formValues={},u}return e=i,Object.defineProperty(e,"prototype",{writable:!1}),e}(b);function U(t){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},U(t)}function A(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==U(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==U(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===U(o)?o:String(o)),r)}var o}var D=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=e.baseUrl,this._headers=e.headers}var e,n;return e=t,(n=[{key:"_checkServer",value:function(t){return t.ok?t.json():Promise.reject("Ошибка: ".concat(t.status))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{method:"GET",headers:this._headers}).then(this._checkServer)}},{key:"updateUserInfo",value:function(t){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t.name,about:t.about})}).then(this._checkServer)}},{key:"updateAvatar",value:function(t){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t.avatar})}).then(this._checkServer)}},{key:"addNewCard",value:function(t){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t.place,link:t.link})}).then(this._checkServer)}},{key:"deleteCard",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t),{method:"DELETE",headers:this._headers}).then(this._checkServer)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{method:"GET",headers:this._headers}).then(this._checkServer)}},{key:"addLike",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:"PUT",headers:this._headers}).then(this._checkServer)}},{key:"deleteLike",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:"DELETE",headers:this._headers}).then(this._checkServer)}}])&&A(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function V(t){return V="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},V(t)}function F(t,e){return F=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},F(t,e)}function N(t,e){if(e&&("object"===V(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return J(t)}function J(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function G(){return G="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=H(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},G.apply(this,arguments)}function H(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=z(t)););return t}function z(t){return z=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},z(t)}function M(t,e,n){return(e=K(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function K(t){var e=function(t,e){if("object"!==V(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==V(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===V(e)?e:String(e)}var Q,W=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&F(t,e)}(i,t);var e,n,r,o=(n=i,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=z(n);if(r){var o=z(this).constructor;t=Reflect.construct(e,arguments,o)}else t=e.apply(this,arguments);return N(this,t)});function i(t,e){var n,r,u=e.callbackSubmit;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,i),M(J(r=o.call(this,t)),"setEventListeners",(function(t,e){G((n=J(r),z(i.prototype)),"setEventListeners",n).call(n),r._submitButton.addEventListener("click",(function(){r._callbackSubmit(t,e)}))})),M(J(r),"submitStatus",(function(t){r._submitButton.textContent=t})),r._popup=document.querySelector(t),r._submitButton=r._popup.querySelector("#question-btn"),r._callbackSubmit=u,r}return e=i,Object.defineProperty(e,"prototype",{writable:!1}),e}(b),X={form:".popup__form",input:".popup__input",submitButton:".popup__save-button",inActiveButton:"popup__save-button_invalid",inputError:"popup__error",errorClass:"popup__input_error_visible"},Y=document.querySelector("#profile-form"),Z=document.querySelector("#card-form"),$=document.querySelector("#avatar-form"),tt=document.querySelector(".popup__input_type_name"),et=document.querySelector(".popup__input_type_job"),nt=document.querySelector(".profile__avatar-overlay"),rt=document.querySelector(".profile-info__edit-button"),ot=document.querySelector(".profile__add-button"),it=new D({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-55",headers:{authorization:"8e75bdf3-a6dd-493a-8736-dd4d2d269086","Content-Type":"application/json"}});Promise.all([it.getUserInfo(),it.getInitialCards()]).then((function(t){Q=t[0]._id,at.setAvatar(t[0]),at.setUserInfo(t[0]),ut.renderItems(t[1])})).catch((function(t){console.log("Ошибка: ".concat(t))}));var ut=new f({renderer:function(t){ut.setItem(ct(t))}},".elements");function ct(t){var e=new a(lt,{handleDeleteIconClick:function(t,e){st.open(),st.setEventListeners(t,e)}},{handleAddLike:function(t){it.addLike(t).then((function(t){e.handleLikeCard(t)})).catch((function(t){console.log("Ошибка: ".concat(t))}))}},{handleRemoveLike:function(t){it.deleteLike(t).then((function(e){t.handleLikeCard(e)})).catch((function(t){console.log("Ошибка: ".concat(t))}))}},Q,t,".template");return e.render()}var at=new j({nameSelector:".profile-info__title",jobSelector:".profile-info__subtitle",avatarSelector:".profile__avatar-image"}),lt=function(t,e){ft.open(t,e)},st=new W("#question-popup",{callbackSubmit:function(t,e){st.submitStatus("Удаление..."),it.deleteCard(t).then((function(t){st.close(),e.deleteCard(t)})).catch((function(t){console.log("Ошибка: ".concat(t))})).finally((function(){st.submitStatus("Да")}))}}),ft=new k("#image-popup");ft.setEventListeners();var pt=new x("#card-popup",{callbackFormSubmit:function(t){pt.submitStatus("Сохранение..."),it.addNewCard(t).then((function(t){ut.setItem(ct(t)),pt.close()})).catch((function(t){console.log("Ошибка: ".concat(t))})).finally((function(){pt.submitStatus("Сохранить")}))}});pt.setEventListeners();var yt=new x("#avatar-popup",{callbackFormSubmit:function(t){yt.submitStatus("Сохранение..."),it.updateAvatar(t).then((function(t){at.setAvatar(t),yt.close()})).catch((function(t){console.log("Ошибка: ".concat(t))})).finally((function(){yt.submitStatus("Сохранить")}))}});yt.setEventListeners();var bt=new x("#profile-popup",{callbackFormSubmit:function(t){bt.submitStatus("Сохранение..."),it.updateUserInfo(t).then((function(t){at.setUserInfo(t),bt.close()})).catch((function(t){console.log("Ошибка: ".concat(t))})).finally((function(){bt.submitStatus("Сохранить")}))}});bt.setEventListeners();var mt=new r(X,Y);mt.enableValidation();var dt=new r(X,Z);dt.enableValidation();var ht=new r(X,$);ht.enableValidation(),rt.addEventListener("click",(function(){bt.open();var t=at.getUserInfo();tt.value=t.name,et.value=t.job,mt.resetValidation()})),nt.addEventListener("click",(function(){yt.open(),ht.resetValidation()})),ot.addEventListener("click",(function(){pt.open(),dt.resetValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,